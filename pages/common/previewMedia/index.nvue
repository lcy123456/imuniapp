<template>
    <view>
        <swiper
            class="swiper_container"
            :current="current"
            :style="{width: systemInfo.windowWidth, height: systemInfo.windowHeight + 'px'}"
            @change="change"
        >
            <swiper-item
                v-for="v in list"
                :key="v.url"
                :style="{width: systemInfo.windowWidth, height: systemInfo.windowHeight + 'px'}"
            >
                <image
                    v-if="v.type === 'image'"
                    :src="v.url"
                    :style="{width: systemInfo.windowWidth, height: systemInfo.windowHeight + 'px'}"
                    @click="previewImage(v)"
                    @longpress="longpress(0)"
                    mode="aspectFit"
                />
                <video
                    v-else-if="v.type === 'video'"
                    :id="v.url"
                    :src="v.url"
                    :style="{width: systemInfo.windowWidth, height: systemInfo.windowHeight + 'px'}"
                    :poster="v.poster && v.poster[0]"
                    @longpress="longpress(1)"
                />
            </swiper-item>
        </swiper>
        <u-action-sheet
            :safe-area-inset-bottom="true"
            round="12"
            :actions="actionSheetMenu"
            :close-on-click-overlay="true"
            :close-on-click-action="true"
            :show="showActionSheet"
            @select="selectClick"
            @close="showActionSheet = false"
        />
    </view>
</template>

<script>
//  list = [
//      {
//         url: 'url',
//         poster: 'url',
//         type: 'video'
//      },
//      {
//         url: 'url',
//         type: 'image'
//      },
//  ];
export default {

    data () {
        return {
            list: [],
            current: 0,
            item: null,
            showActionSheet: false,
            baseList: [
                {
                    name: '保存图片',
                    type: 0
                },
                {
                    name: '保存视频',
                    type: 1
                }
            ],
            actionSheetMenu: [],
            systemInfo: uni.getSystemInfoSync()
        };
    },

    onLoad (options) {
        const { list, current } = options;
        this.list = JSON.parse(decodeURIComponent(list));
        this.current = current;
        this.item = this.list[current];
    },

    methods: {
        longpress (type) {
            this.actionSheetMenu = [this.baseList[type], { name: '取消', type: 2 }];
            this.showActionSheet = true;
        },
        selectClick ({ type }) {
            if (type !== 2) {
                uni.showLoading();
                uni.downloadFile({
					url: this.list[this.current].url,
					success: (res) => {
						if (res.statusCode === 200) {
							uni.saveImageToPhotosAlbum({
								filePath: res.tempFilePath,
								success: () => {
									uni.hideLoading();
									uni.showToast({
										title: "保存成功",
										icon: "success"
									});
								},
								fail: () => {
									uni.hideLoading();
									uni.showToast({
										title: "保存失败，请稍后重试",
										icon: "fail"
									});
								}
							});
						}
                    },
                    fail: () => {
                        uni.hideLoading();
                        uni.showToast({
                            title: "保存失败，请稍后重试",
                            icon: "fail"
                        });
                    }
                });
            } else {
                this.showActionSheet = false;
            }
        },
        previewImage (item) {
            uni.previewImage({
                urls: [item.url]
            });
        },
        change (e) {
            console.log(e);
            let current = e.detail.current;
            if (this.item.type === 'video') {
                console.log(this.item);
                let video = uni.createVideoContext(this.item.url, this);
                video && video.pause();
            }
            this.item = this.list[current];
        }
    },
};
</script>

<style lang="scss" scoped>
.swiper_container {
    background-color: $uni-bg-color-inverse;
}
</style>